!function(){"use strict";String.prototype.camelCaseToNormalText=function(){return this.replace(/([A-Z])/g," $1").replace(/^./,function(a){return a.toUpperCase()})},angular.module("uiTreeGrid",[]),angular.module("uiTreeGrid").value("uiGridConfig",{}),angular.module("uiTreeGrid").directive("uiGrid",["uiGridConfig","Util",function(a,b){var c={};return a&&angular.extend(c,a),{restrict:"A",replace:!0,templateUrl:"grid.html",scope:{searchText:"=",iconTemplate:"@",selectRow:"&",data:"=",columns:"="},link:function(a,c){a.treeData=[],a.predicate="name",a.reverse=!1,b.isUndefined(a.data.$promise)&&(a.data.$promise={then:function(b){b(a.data)}}),a.data.$promise.then(function(c){b.defineColumnsIfNotExists(a),a.treeData=b.generate(b.sort(c,a.predicate,a.reverse),1)}),a.sort=function(c,d){a.predicate=c,a.reverse=!d,a.treeData=b.generate(b.sort(a.data,a.predicate,a.reverse),1)},a.isVisibleIcon=function(){return!b.isUndefined(a.iconTemplate)},a.clickRow=function(b,c){a.selectRow()(b,c)},a.$watch("searchText",function(c){a.treeData=[];var d=b.filter(a.data,c),e=b.sort(d,a.predicate,a.reverse);a.treeData=b.generate(e,1)}),angular.element(c.find("div")[1]).bind("scroll",function(){c.find("div")[0].style.left=-1*this.scrollLeft+"px"})}}}]),angular.module("uiTreeGrid").service("Util",["$filter",function(a){var b=this;this.isUndefined=function(a){return"undefined"==typeof a},this.generate=function c(a,b,d){d=d||[];var e=angular.copy(a);return(e||[]).forEach(function(a){a.lvl=b,d.push(a),c(a.children,b+1,d),delete a.children}),d},this.filter=function d(b,c){var e=angular.copy(b);return(e||[]).forEach(function(a){a.children=d(a.children,c)}),a("filter")(e,c)},this.sort=function e(b,c,d){var f=angular.copy(b);return(f||[]).forEach(function(a){a.children=e(a.children,c,d)}),a("orderBy")(f,c,d)},this.defineColumnsIfNotExists=function(a){return b.isUndefined(a.columns)?(a.columns=[],void Object.keys(a.data[0]).forEach(function(b){a.columns.push({id:b,label:b.camelCaseToNormalText()})})):!1}}]),angular.module("uiTreeGrid").run(["$templateCache",function(a){a.put("grid.html",'<div class="ui-tree-grid bordered"><div class="tg-header row"><div class="column size-{{column.size}}" ng-repeat="column in columns" ng-click="sort(column.id, reverse);">{{column.label}} <span ng-class="{true: \'fa fa-sort-asc\', false: \'fa fa-sort-desc\'}[reverse]" ng-if="column.id == predicate"></span></div></div><div class=tg><div ng-repeat="row in treeData" class=row><div class="column lvl-{{row.lvl}} size-{{column.size}}" ng-repeat="column in columns" ng-click="clickRow(row, $index);">{{row[column.id]}}</div></div></div></div>')}])}(window);